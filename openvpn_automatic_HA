#!/bin/bash

#https://gist.github.com/superjamie/ac55b6d2c080582a3e64
#https://blog.sleeplessbeastie.eu/2019/01/14/how-to-use-terminal-to-display-servers-recommended-by-nordvpn/
#pick up the list of ID-s
#curl --silent 'https://nordvpn.com/wp-admin/admin-ajax.php?action=servers_recommendations&filters=\{${COUNTRY_ID}22:81\}' | jq --raw-output 'limit(3;.[]) | "  Server: \(.name)\nHostname: \(.hostname)\nLocation: \(.locations[0].country.name) - \(.locations[0].city.name)\nDistance: \(.distance | floor)\n    Load: \(.load)\n"'
#curl --silent 'https://nordvpn.com/wp-admin/admin-ajax.php?action=servers_recommendations' | jq
#4HieoTt6
#echo 1 >  /proc/sys/net/ipv4/ip_forward
#wget  -q -c -P /etc/openvpn https://downloads.nordcdn.com/configs/archives/servers/ovpn.zip
#unzip -u -o -q -d /etc/openvpn/nordvpn /etc/openvpn/ovpn.zip
systemctl stop openvpn@nordvpn &
systemctl stop openvpn@nordvpn_srv1 &
systemctl stop openvpn@nordvpn_srv2 &
systemctl stop openvpn@nordvpn_srv3 &

wait

ip route flush table tun0
ip rule del from all fwmark 0x1 lookup tun0 2>/dev/null
ip rule del from all fwmark 0x1 2>/dev/null
ip rule del from all table tun0
ip rule del from all lookup tun0 table tun0

ip route flush table tun1
ip rule del from all fwmark 0x2 lookup tun1 2>/dev/null
ip rule del from all fwmark 0x2 2>/dev/null
ip rule del from all table tun1
ip rule del from all lookup tun1 table tun1

ip route flush table tun2
ip rule del from all fwmark 0x3 lookup tun2 2>/dev/null
ip rule del from all fwmark 0x3 2>/dev/null
ip rule del from all table tun2
ip rule del from all lookup tun2 table tun2

RECOMMENDED_SERVERS=$(curl --silent 'https://nordvpn.com/wp-admin/admin-ajax.php?action=servers_recommendations' | jq --raw-output '.[].hostname' | head -n3)
VPN_SERVER_CONF1=$(echo ${RECOMMENDED_SERVERS} | awk '{print $1}')
VPN_IP_SERVER1=$(nslookup ${VPN_SERVER_CONF1} | grep -A2 ^Name: | grep ^Address: | awk '{print $2}')
VPN_SERVER1="remote ${VPN_IP_SERVER1} 443"
VPN_SERVER_CONF2=$(echo ${RECOMMENDED_SERVERS} | awk '{print $2}')
VPN_IP_SERVER2=$(nslookup ${VPN_SERVER_CONF2} | grep -A2 ^Name: | grep ^Address: | awk '{print $2}')
VPN_SERVER2="remote ${VPN_IP_SERVER2} 443"
VPN_SERVER_CONF3=$(echo ${RECOMMENDED_SERVERS} | awk '{print $3}')
VPN_IP_SERVER3=$(nslookup ${VPN_SERVER_CONF3} | grep -A2 ^Name: | grep ^Address: | awk '{print $2}')
VPN_SERVER3="remote ${VPN_IP_SERVER3} 443"
cp -f /etc/openvpn/nordvpn_template.conf /etc/openvpn/nordvpn.conf
sed -i 's/route-noexec//g' /etc/openvpn/nordvpn.conf
sed -i '/^route-up/d' /etc/openvpn/nordvpn.conf
sed -i '/^script-security/d' /etc/openvpn/nordvpn.conf

sed -i "s/remote_variable/${VPN_SERVER1}\n${VPN_SERVER2}\n${VPN_SERVER3}\nremote-random/g" /etc/openvpn/nordvpn.conf

systemctl start openvpn@nordvpn
sleep 3
MAIN_ETH="enxb827eb330952"
TUN_ROUTER=$(route | grep tun | grep '^0.0.0.0' | awk '{print $2}')
#TUN_ROUTER=$(ifconfig | grep -A2 tun0 | grep -w inet | awk '{print $2}' | awk -F\. '{print $1"."$2"."$3".1"}')
LOCAL_ROUTER="192.168.2.254"

# flush all iptables entries
iptables -t filter -F
iptables -t filter -X
iptables -t nat -F
iptables -t nat -X
iptables -t mangle -F
iptables -t mangle -X
iptables -t filter -P INPUT ACCEPT
iptables -t filter -P OUTPUT ACCEPT
iptables -t filter -P FORWARD ACCEPT

iptables -F
iptables -t nat -F
iptables -t nat -A POSTROUTING -o tun0 -j MASQUERADE
#iptables -t nat -A POSTROUTING -s 192.168.2.0/24 -o tun0 -j SNAT --to-source ${TUN_ROUTER}

iptables -A FORWARD -i tun0 -o ${MAIN_ETH} -m state --state RELATED,ESTABLISHED -j ACCEPT
iptables -A FORWARD -i ${MAIN_ETH} -o tun0 -j ACCEPT

iptables -t nat -L -n -v

ip route del 192.168.100.0/24 via 192.168.2.10
ip route del 192.168.122.0/24 via 192.168.2.10
ip route add 192.168.100.0/24 via 192.168.2.10
ip route add 192.168.122.0/24 via 192.168.2.10
